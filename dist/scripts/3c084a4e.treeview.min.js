!function(){define("nav_node_view",["underscore","marionette"],function(a,b){return b.CompositeView.extend({template:a.template('<li>\n  <{{ ((id=="null") ? "div": "a") }} class="node-a-{{ id }}" href="#">\n    <div class="node">\n      <span class="toggle-icon fa {{ is_folder? "fa-plus" : "hidden" }}" ></span>\n      <label class="{{ (checkable ? "" : "hidden") }}">\n      <input id="checkbox-{{ id }}" type="checkbox" class="node-checkbox">\n      </label>\n      <span class="fa {{ icon }}"></span>{{ nodeName }}\n    </div>\n  </{{ ((id=="null") ? "div": "a") }}>\n  </li>'),tagName:"ul",initialize:function(a){return this.collection=this.model.nodes,this.controller=a.controller,this.controller.nodeList[this.model.id]=this,this.on("click:toggle",this._onToggle),this.on("click:checkbox",this._clickCheckbox),this.on("click:node",this._clickNode)},_clickCheckbox:function(a){var b,c;return c=a.model.get("nodeName"),b=$("#checkbox-"+a.model.get("id")).prop("checked"),b?this.controller.checkedNode[c]=a.view:delete this.controller.checkedNode[c]},_clickNode:function(a){return this.activate(),this.controller.trigger("clicknode",a.view)},_onToggle:function(){return this.isExpanded()?this.collapse():this.expand()},triggers:{"click .toggle-icon":"click:toggle","click a":"click:node","click .node-checkbox":{event:"click:checkbox",preventDefault:!1,stopPropagation:!0}},load_nodes:function(a){return this.collection.add(a),this.on_loaded?(this.on_loaded(this),this.on_loaded=null):void 0},serializeData:function(){var a;return a=this.model.get("checkable"),"undefined"==typeof a&&(a=this.controller.checkable),{id:this.model.get("id"),icon:this.model.get("icon"),nodeName:this.model.get("nodeName"),is_folder:this.model.get("is_folder"),checkable:a}},itemViewOptions:function(){return{controller:this.controller}},appendHtml:function(a,b){return a.$("li:first").append(b.el)},isExpanded:function(){return $(this.el).find("span").first().attr("class").indexOf("plus")<=-1},expand:function(a){return this.collection.length?a&&a(this):(this.on_loaded=a,!this.controller.is_static&&this.model.get("is_folder")?this.controller.trigger("load",this,this.model):a&&a(this)),$(this.el).find("span").first().addClass("fa-minus").removeClass("fa-plus"),$(this.el).children().children().filter("ul").show("fast")},collapse:function(){return $(this.el).find("span").first().addClass("fa-plus").removeClass("fa-minus"),$(this.el).children().children().filter("ul").hide("fast")},activate:function(){var a,b;return b=this.controller.currentNode,b&&(b=b.model.get("id")),a=this.model.get("id"),b!==a?($(".navtree .node-a-"+b).find("div").removeClass("node-active"),$(this.el).find(".node").first().addClass("node-active"),this.controller.currentNode=this):void 0}})}),define("nav_root_view",["underscore","marionette","nav_node_view"],function(a,b,c){return b.CollectionView.extend({initialize:function(a){return this.controller=a.controller},className:"navtree",itemView:c,itemViewOptions:function(){return{controller:this.controller}},collapse:function(){return $(this.el).find("li > ul").hide()}})}),define("tree_node_model",["underscore","backbone"],function(a,b){return b.Model.extend({initialize:function(){var a,b;return b=this.get("nodes"),b?(a=require("tree_node_collection"),this.nodes=new a(b),this.unset("nodes")):void 0}})}),define("tree_node_collection",["underscore","backbone","tree_node_model"],function(a,b,c){return b.Collection.extend({model:c})}),define("treeview",["underscore","marionette","backbone","nav_root_view","tree_node_collection"],function(a,b,c,d,e){var f;return f=b.Controller.extend({initialize:function(a){return this.checkable=a.checkable,this.css=a.css,this.is_static=a.is_static,this.treeView=new d({collection:new e,controller:this}),this.checkedNode={},this.nodeList={}},load_nodes:function(a){return this.treeView.collection.add(a),this.treeView.collapse(this),this.loaded_callback?(this.loaded_callback(this),this.loaded_callback=null):void 0},render:function(a){return this.treeView.render(),$(a).html(this.treeView.el)},get_checked:function(){return this.checkedNode},get_activated:function(){return this.currentNode},get_node:function(a){return this.nodeList[a]},_onGotNode:function(b){var c,d,e;return this.node_ids.length?(d=this.that,e=a.bind(d._onGotNode,{on_loaded:this.on_loaded,that:d,node_ids:this.node_ids.slice(1)}),c=d.get_node(this.node_ids[0]),c.expand(e)):this.on_loaded(b)},get_node_by_path:function(b,c){var d;return d=a.bind(this._onGotNode,{on_loaded:c,that:this,node_ids:b}),this.treeView.collection.length?d(this):this.loaded_callback=d}})})}();